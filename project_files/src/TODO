Norme:
- [x]	Libft
- [x]	incl
	- [x] ft_lex.h
	- [x] ft_lex.h line 58 prefix
- [x]	env
	- [x] env_path.c
- [x]	exec
	- [x] builtins
	- [x] builtin_search (too many lines) #DONE, check if norme
	- [x] exec.c (too many lines) #DONE, check if norme and compiles + move one function out
- [x]	lex
	- [x] lex_read.c (too many lines) #DONE, check if norme
- [x]	parser
	- [x] handle_token.c (too many lines) #DONE, check if norme
- [x]	main
- [x]	errno

Other:
- [x]	change all the headers
- [x]	builtins exit code
- [x]	check if global composit string in parser is correctly implemented

TESTS:

- [x] echo
	- [x] echo ""
	- [x] echo "yesy"
	- [x] echo test test
	- [x] "echo" test
	- [x] 'echo' "test"
	- [x] echo -n
	- [x] echo "\""
	- [x] echo "\"
	- [x] echo hoi -n
- [x] cd
	- [x] relative path
	- [x] absolute path
	- [x] cd "\$HOME"
- [x] pwd
- [x] export
	- [x] export test=hello
	- [x] export TEST=hello
	- [x] export kip=ei===melk
	- [x] export 1hello_world
	- [x] export LS="ls -la";$LS
- [x] env
	- [x] echo $TEST
	- [x] echo "$TEST"
	- [x] echo ${TEST}
    - [x] echo "${TEST}"
    - [x] echo $1234
    - [x] echo $_1234
- [x] unset
	- [x] unset test
	- [x] unset TEST
	- [x] unset $TEST (??)
	- [x] unset PATH;ls
- [x] exit
	- [x] exit 42
	- [x] exit prints "exit\n"
	- [x] exit 1 2 3
	- [x] exit hello
- [x] ;
- [x] ''
- [x] ""
- [x] <, >, >>
	- [x] < in
	- [x] > out
	- [x] >> out
	- [x] ls >> file3 | cat < file3
	- [x] ls >>>>>>>>>> file
- [x] |
	- [x] up to 20 (??)
- [x] $?
- [x] signals
	- [x] ctrl-C SIG_INT		-> print nothing
	- [x] ctrl-D EOF			-> print "exit\n"
	- [x] ctrl-\ SIG_QUIT 		-> print "Quit\n" (ignore in parent, only for child)

- [x] echo hey > yes; cat yes; echo bye < yes | cat -e > lol; cat lol

- [] chmod 000 on an executable and try to use it with minishell (check exit status)
- [x] try to type something and then sending and EOF (?????????)
- [] memory leak when unterminated quoted string with an env (echo "$TEST )

- [x] REDO ALL THE TESTS IN VALGRIND
- [x] CHECK FOR NORM AGAIN